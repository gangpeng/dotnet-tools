using System;

namespace DumpAnalyzer;

/// <summary>
/// Generate progress bar in console.
/// 
/// The code in this file is generated by Gemini.
/// </summary>
public class ConsoleProgressBar
{
    private const int BarWidth = 50;

    private string _progressText = "";
    private DateTime _startTime = DateTime.UtcNow;

    public void Draw(int current, int total, string message = "")
    {
        double progressRatio = (double)current / (double)total;
        int filledBarLength = (int)(progressRatio * BarWidth);
        string barContent = "[";
        for (int index = 0; index < BarWidth; ++index)
        {
            barContent = index >= filledBarLength ? barContent + "-" : barContent + "#";
        }
        string progressBar = barContent + "]";

        TimeSpan elapsedTime = DateTime.UtcNow - this._startTime;
        string timeInfo = "";
        if (current > 0)
        {
            double totalSeconds = elapsedTime.TotalSeconds;
            TimeSpan estimatedTimeRemaining = TimeSpan.FromSeconds(
                totalSeconds / (double)current * (double)total - totalSeconds);
            timeInfo = $" Elapsed: {elapsedTime:mm\\:ss} | ETA: {estimatedTimeRemaining:mm\\:ss}";
        }

        this._progressText = $"{progressBar} {progressRatio:P0} {message}{timeInfo}";
        int cursorTop = Console.CursorTop;
        int cursorLeft = Console.CursorLeft;
        Console.SetCursorPosition(0, cursorTop);
        Console.Write(this._progressText);
    }

    public void Complete(string message = "Done!")
    {
        this.Draw(1, 1, message);
        Console.WriteLine();
    }
}